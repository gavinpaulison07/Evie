local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("TRANNY SPUKI EXPLOIT", "GrapeTheme")
local Tab = Window:NewTab("Nigga")
local Section = Tab:NewSection("TrangenderNext")
Section:NewLabel("MAIN")
local Flying = false 
game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
print("ADDED- TP to box")
Section:NewButton("Target Specific Players", "Perform action on players under workspace.Players", function()
    local workspacePlayers = workspace:WaitForChild("Players") -- Target workspace.Players

    -- Function to handle descendants of a player
    local function processPlayerDescendants(targetPlayer)
        if not targetPlayer or targetPlayer.Parent ~= workspacePlayers then
            warn("Target player is not under workspace.Players!")
            return
        end

        -- Iterate through the target player's descendants
        for _, descendant in ipairs(targetPlayer:GetDescendants()) do
            if descendant:IsA("MeshPart") or descendant:IsA("Part") then
                print("Processing part:", descendant.Name)

                -- Fire the event on the "Salt" tool
                local saltTool = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Salt")
                if saltTool and saltTool:FindFirstChild("Event") then
                    saltTool.Event:FireServer(descendant)
                else
                    warn("Salt tool or Event not found in the Backpack!")
                end
            end
        end
    end

    -- GUI setup
    local player = game:GetService("Players").LocalPlayer
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PlayerListGui"
    screenGui.Parent = player:WaitForChild("PlayerGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.3, 0, 0.5, 0)
    frame.Position = UDim2.new(0.35, 0, 0.25, 0)
    frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0.1, 0)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.Text = "Player List"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBold
    title.TextSize = 24
    title.Parent = frame

    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Size = UDim2.new(1, 0, 0.9, 0)
    scrollingFrame.Position = UDim2.new(0, 0, 0.1, 0)
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 2, 0)
    scrollingFrame.ScrollBarThickness = 6
    scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    scrollingFrame.BorderSizePixel = 0
    scrollingFrame.Parent = frame

    -- Dragging functionality for the frame
    local dragging, dragStart, startPos
    local UserInputService = game:GetService("UserInputService")

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)

    frame.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    -- Function to populate the player list
    local function updatePlayerList()
        scrollingFrame:ClearAllChildren()
        local buttonHeight = 30
        local spacing = 5
        local totalHeight = 0

        for _, target in ipairs(workspacePlayers:GetChildren()) do
            -- Create a button for each player
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, 0, 0, buttonHeight)
            button.Position = UDim2.new(0, 0, 0, totalHeight)
            button.Text = target.Name
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
            button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            button.Font = Enum.Font.Gotham
            button.TextSize = 18
            button.BorderSizePixel = 0
            button.Parent = scrollingFrame

            -- On button click, process the target player's descendants
            button.MouseButton1Click:Connect(function()
                print("Processing player:", target.Name)
                processPlayerDescendants(target)
            end)

            totalHeight = totalHeight + buttonHeight + spacing
        end

        scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, totalHeight)
    end

    -- Initialize the player list
    updatePlayerList()
end)



Section:NewButton("Marvel Infinity", "Be wanda", function()
	local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local ChosenCharacter = "WandaMaximoff" -- Replace this with the correct character name or logic
local eventName = ChosenCharacter .. "Event" -- The event name
local chosenEvent = Remotes:WaitForChild(eventName)

local player = Players.LocalPlayer

-- Create the GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PlayerListGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.3, 0, 0.5, 0) -- 30% width, 50% height of screen
frame.Position = UDim2.new(0.35, 0, 0.25, 0) -- Centered on screen
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.BorderSizePixel = 0
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0.1, 0) -- 10% height of the frame
title.Position = UDim2.new(0, 0, 0, 0)
title.Text = "Player List"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 24
title.Parent = frame

local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, 0, 0.9, 0) -- Remaining 90% of the frame
scrollingFrame.Position = UDim2.new(0, 0, 0.1, 0)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 2, 0) -- Adjust canvas size for scrolling
scrollingFrame.ScrollBarThickness = 6
scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
scrollingFrame.BorderSizePixel = 0
scrollingFrame.Parent = frame

-- Make the frame draggable
local UserInputService = game:GetService("UserInputService")
local dragging, dragStart, startPos

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Function to teleport and execute event
local function teleportAndExecute(targetPlayer)
    if not targetPlayer then return end
    local character = player.Character
    local targetCharacter = targetPlayer.Character

    if character and targetCharacter and targetCharacter:FindFirstChild("LeftHand") then
        -- Teleport to the target's HumanoidRootPart
        character:MoveTo(targetCharacter.HumanoidRootPart.Position)

        -- Add a slight delay to ensure teleportation happens first
        task.wait(0.1)

        -- Fire the RemoteEvent with correct parameters
        print("Firing RemoteEvent:", eventName)

        chosenEvent:FireServer(
            "T", -- Key
            true, -- Boolean parameter
            targetCharacter.UpperTorso.Position, -- CFrame of the LeftHand
            targetCharacter.UpperTorso, -- The target body part
            character.PrimaryPart.Position -- Local character's PrimaryPart CFrame
        )
        task.wait(.15)
targetCharacter.Head:Destroy()
targetCharacter.Humanoid.Health = 0
    else
        warn("Target does not have a valid LeftHand or HumanoidRootPart!")
    end
end

-- Function to populate the player list
local function updatePlayerList()
    scrollingFrame:ClearAllChildren() -- Clear the current list
    local buttonHeight = 30 -- Height of each button
    local spacing = 5 -- Space between buttons
    local totalHeight = 0 -- To calculate canvas size

    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= player then
            -- Create a button for each player
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, 0, 0, buttonHeight) -- Full width of the ScrollingFrame
            button.Position = UDim2.new(0, 0, 0, totalHeight)
            button.Text = p.Name
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
            button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            button.Font = Enum.Font.Gotham
            button.TextSize = 18
            button.BorderSizePixel = 0
            button.Parent = scrollingFrame

            -- On button click, teleport to the player and execute
            button.MouseButton1Click:Connect(function()
                print("Button clicked for player: " .. p.Name)
                teleportAndExecute(p)
            end)

            totalHeight = totalHeight + buttonHeight + spacing -- Increment for the next button
        end
    end

    -- Update the CanvasSize dynamically
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, totalHeight)
end

-- Update the player list whenever players join/leave
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)

-- Initialize the list
updatePlayerList()

end)

Section:NewButton("TP to box", "WHEW", function()
	game.Players.LocalPlayer.Character:MoveTo(Vector3.new(584.47509765625, -282.2247009277344, -367.48907470703125))
end)
Section:NewButton("TP TO BOX2", "WHEW", function()
	game.Players.LocalPlayer.Character:MoveTo(Vector3.new(223.954833984375, -72.9415202636719, -392.6907653808594))
end)

Section:NewButton("MASSTP", "WHEW", function()
	for i,v in game.Players:GetChildren() do
		game.Players.LocalPlayer.Character:MoveTo(v.Character.PrimaryPart.Position)
		task.wait(.7)
	end
end)




local InfiniteJumpEnabled = false
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)

Section:NewToggle("TrannyJump", "WHEWWWWWWWWWWWWWWWWWW", function(state)
	if state then
		InfiniteJumpEnabled = true
	else
		InfiniteJumpEnabled = false
	end
end)

Section:NewButton("FREEZEANIG", "WHEW", function()
	if game.Players.LocalPlayer.Character.Head.Anchored == true then
		for i,v in game.Players.LocalPlayer.Character:GetDescendants() do
			if v:IsA("BasePart") then
				v.Anchored = false
			end
		end
	else
		for i,v in game.Players.LocalPlayer.Character:GetDescendants() do
			if v:IsA("BasePart") then
				v.Anchored = true
			end
		end
	end

end)

Section:NewTextBox("Tp to plr", "Change YO nigga speed", function(txt)
	if game.Players:FindFirstChild(txt) == nil then return end
	game.Players.LocalPlayer.Character:MoveTo(game.Players:FindFirstChild(txt).Character.PrimaryPart.Position)
end)


Section:NewTextBox("WALKSPEED", "Change YO nigga speed", function(txt)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(txt)
end)

Section:NewTextBox("HipHeight", "WHEW", function(txt)
	game.Players.LocalPlayer.Character.Humanoid.HipHeight = tonumber(txt)

end)

Section:NewKeybind("EVIES FLIGHT", "TRANNY FLIGHT DEC", Enum.KeyCode.F, function()

	local Character = game.Players.LocalPlayer.Character
	local Humanoid = Character:FindFirstChild("Humanoid") or Character:WaitForChild("Humanoid")
	local HoverAnimID = "rbxassetid://3823158750"
	local FlyAnimID = "rbxassetid://5938365243"
	local JumpAnimID = "rbxassetid://14219386159"



	local BodyVelocity = Instance.new("BodyVelocity")
	BodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
	BodyVelocity.P = 20000
	BodyVelocity.Velocity = Vector3.new(0,0,0)

	local v3 = Instance.new("BodyGyro")
	v3.D = 500
	v3.MaxTorque = Vector3.new(400000, 400000, 400000)
	v3.P = 5000

	BodyVelocity.Parent = Character
	v3.Parent = Character

	local falling = false


	local Sound1 = Instance.new("Sound", Character:WaitForChild("HumanoidRootPart"))
	Sound1.SoundId = "rbxassetid://3308152153"
	Sound1.Name = "Sound1"


	local Camera = game.Workspace.Camera




	local function u2()
		if Humanoid.MoveDirection == Vector3.new(0, 0, 0) then
			return Humanoid.MoveDirection
		end
		local v12 = (Camera.CFrame * CFrame.new((CFrame.new(Camera.CFrame.p, Camera.CFrame.p + Vector3.new(Camera.CFrame.lookVector.x, 0, Camera.CFrame.lookVector.z)):VectorToObjectSpace(Humanoid.MoveDirection)))).p - Camera.CFrame.p;
		if v12 == Vector3.new() then
			return v12
		end
		return v12.unit
	end

	local Flymoving = Instance.new("BoolValue")
	Flymoving.Value = 'Flymoving'
	Flymoving.Parent = Character
	local TweenService = game:GetService("TweenService")
	local UIS = game:GetService("UserInputService")




	if Flying == false then

		if Character:FindFirstChild("HumanoidRootPart") then
			local humanoid = Character.Humanoid

			if humanoid:GetState() ~= Enum.HumanoidStateType.Dead
				and humanoid:GetState() ~= Enum.HumanoidStateType.Freefall
				and humanoid:GetState() ~= Enum.HumanoidStateType.FallingDown
				and humanoid:GetState() ~= Enum.HumanoidStateType.Swimming
				and humanoid:GetState() ~= Enum.HumanoidStateType.Jumping
				and Flying == false and Flymoving.Value == false then

				Humanoid:ChangeState(Enum.HumanoidStateType.Flying)

				local offset2 = CFrame.new(0, 10, -15)
				local newPos2 = Character.HumanoidRootPart.CFrame * offset2

				local direction = (newPos2.p - Character.HumanoidRootPart.Position).unit
				local velocity = direction * 100

				TweenService:Create(BodyVelocity, TweenInfo.new(0.01), {Velocity = velocity}):Play()



				wait(.70)
			end

			Flying = true
			falling = false
			BodyVelocity.Parent = Character.HumanoidRootPart
			v3.Parent = Character.HumanoidRootPart
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running, false)
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing, false)
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, false)

			Humanoid:ChangeState(Enum.HumanoidStateType.Flying)
			while Flying == true do
				wait()
				Humanoid:ChangeState(Enum.HumanoidStateType.Flying)
				if u2() == Vector3.new(0, 0, 0) then
					Flymoving.Value = false
				else
					Flymoving.Value = true
				end

				TweenService:Create(BodyVelocity, TweenInfo.new(1), {Velocity = u2() * 70}):Play()

				-- Turn the character towards the move direction using BodyGyro
				local moveDirection = u2()
				if moveDirection.magnitude > 0 then
					v3.CFrame = CFrame.new(Character.HumanoidRootPart.Position, Character.HumanoidRootPart.Position + moveDirection)
				else
					v3.CFrame = game.Workspace.Camera.CFrame
				end

			end

			BodyVelocity:Destroy()
			v3:Destroy()

			falling = true
			Flymoving.Value = false
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running, true)
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing, true)
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, true)
			Character.HumanoidRootPart.Running.Volume = 0.65
			Humanoid:ChangeState(Enum.HumanoidStateType.Freefall)




		end

	else


		Flying=  false



	end
end)

print(1)
local LOOP = false
Section:NewTextBox("HeadSit", "HeadSITTT", function(txt)
	if LOOP then
		local hum = game.Players.LocalPlayer.Character.Humanoid
		LOOP = false
		hum.Sit = false
		for i,v in game.Players.LocalPlayer.Character:GetDescendants() do
			if v.Name == "HeadSitWeld" then
				v:Destroy()
			end
		end
	else
		if game.Players:FindFirstChild(txt) == nil then return end
		local me = game.Players.LocalPlayer.Character.HumanoidRootPart
		local hum = game.Players.LocalPlayer.Character.Humanoid
		local other =game.Players:FindFirstChild(txt).Character.HumanoidRootPart

		LOOP = true
		hum.Sit = true
		local WELD = Instance.new("Weld")
		WELD.Name = "HeadSitWeld"
		WELD.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		WELD.Part0 = other
		WELD.Part1 = me
		hum.Sit = true


	end
end)

Section:NewButton("BTOOLSTRANS", "WHEW", function()
	local HopperBin = nil

	local player = game.Players.LocalPlayer
	for item = 1, 4 do
		HopperBin = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
		HopperBin.BinType = item
	end

end)
Section:NewKeybind("CLOSEEXPLOITUSSY", "CLOSE", Enum.KeyCode.E, function()
	Library:ToggleUI()
end)
Section:NewKeybind("CLICKTOTP", "CLOSE", Enum.KeyCode.Q, function()
	local PLR = game.Players.LocalPlayer:GetMouse().Hit.Position
	game.Players.LocalPlayer.Character:MoveTo(PLR)
end)

